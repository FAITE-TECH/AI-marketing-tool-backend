services:
  api:
    build:
      context: .  
      dockerfile: Dockerfile
      target: development
    container_name: ai-marketing-api
    ports:
      - "${API_PORT:-8000}:8000"
    volumes:
      # Mount backend source code for hot reloading
      - ./src:/app/src:delegated
      # Mount other directories from backend
      - ./logs:/app/logs:delegated
      - ./models:/app/models:delegated
      - ./certs:/app/certs:ro
      - ./tests:/app/tests:delegated
    env_file:
      - .env  # Corrected path - just .env since we're in backend folder
    environment:
      # Environment
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DEBUG=${DEBUG:-true}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      
      # Database Configuration
      - POSTGRES_SERVER=${POSTGRES_SERVER}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DATABASE_URL=${DATABASE_URL}
      
      # Security and API Keys
      - SECRET_KEY=${SECRET_KEY}
      - GOOGLE_CLOUD_PROJECT_ID=${GOOGLE_CLOUD_PROJECT_ID}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/certs/service-account-key.json
      
      # CORS Settings
      - BACKEND_CORS_ORIGINS=["http://localhost:3000","http://127.0.0.1:3000","http://localhost:5173","http://127.0.0.1:5173"]
      
      # Python path
      - PYTHONPATH=/app/src
    networks:
      - ai-marketing-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

networks:
  ai-marketing-network:
    driver: bridge